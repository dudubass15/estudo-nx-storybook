{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./task.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./task.component.css?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet TaskComponent = (_class = class TaskComponent {\n  constructor() {\n    this.onPinTask = new EventEmitter();\n    this.onArchiveTask = new EventEmitter();\n  }\n  /**\n   * Component method to trigger the onPin event\n   * @param id string\n   */\n  onPin(id) {\n    this.onPinTask.emit(id);\n  }\n  /**\n   * Component method to trigger the onArchive event\n   * @param id string\n   */\n  onArchive(id) {\n    this.onArchiveTask.emit(id);\n  }\n}, _class.propDecorators = {\n  task: [{\n    type: Input\n  }],\n  onPinTask: [{\n    type: Output\n  }],\n  onArchiveTask: [{\n    type: Output\n  }]\n}, _class);\nTaskComponent = __decorate([Component({\n  selector: 'myorg-task',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TaskComponent);\nexport { TaskComponent };","map":{"version":3,"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","EventEmitter","Input","Output","TaskComponent","constructor","onPinTask","onArchiveTask","onPin","id","emit","onArchive","propDecorators","task","type","selector","template","styles"],"sources":["/Users/eduardo/Development/estudos/nx/myorg/libs/common-ui/src/lib/task/task.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./task.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./task.component.css?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet TaskComponent = class TaskComponent {\n    constructor() {\n        this.onPinTask = new EventEmitter();\n        this.onArchiveTask = new EventEmitter();\n    }\n    /**\n     * Component method to trigger the onPin event\n     * @param id string\n     */\n    onPin(id) {\n        this.onPinTask.emit(id);\n    }\n    /**\n     * Component method to trigger the onArchive event\n     * @param id string\n     */\n    onArchive(id) {\n        this.onArchiveTask.emit(id);\n    }\n    static { this.propDecorators = {\n        task: [{ type: Input }],\n        onPinTask: [{ type: Output }],\n        onArchiveTask: [{ type: Output }]\n    }; }\n};\nTaskComponent = __decorate([\n    Component({\n        selector: 'myorg-task',\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    })\n], TaskComponent);\nexport { TaskComponent };\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,oBAAoB,MAAM,kCAAkC;AACnE,OAAOC,oBAAoB,MAAM,iCAAiC;AAClE,SAASC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACtE,IAAIC,aAAa,aAAG,MAAMA,aAAa,CAAC;EACpCC,WAAW,GAAG;IACV,IAAI,CAACC,SAAS,GAAG,IAAIL,YAAY,EAAE;IACnC,IAAI,CAACM,aAAa,GAAG,IAAIN,YAAY,EAAE;EAC3C;EACA;AACJ;AACA;AACA;EACIO,KAAK,CAACC,EAAE,EAAE;IACN,IAAI,CAACH,SAAS,CAACI,IAAI,CAACD,EAAE,CAAC;EAC3B;EACA;AACJ;AACA;AACA;EACIE,SAAS,CAACF,EAAE,EAAE;IACV,IAAI,CAACF,aAAa,CAACG,IAAI,CAACD,EAAE,CAAC;EAC/B;AAMJ,CAAC,EALY,OAAKG,cAAc,GAAG;EAC3BC,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAEZ;EAAM,CAAC,CAAC;EACvBI,SAAS,EAAE,CAAC;IAAEQ,IAAI,EAAEX;EAAO,CAAC,CAAC;EAC7BI,aAAa,EAAE,CAAC;IAAEO,IAAI,EAAEX;EAAO,CAAC;AACpC,CAAC,SACJ;AACDC,aAAa,GAAGP,UAAU,CAAC,CACvBG,SAAS,CAAC;EACNe,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAElB,oBAAoB;EAC9BmB,MAAM,EAAE,CAAClB,oBAAoB;AACjC,CAAC,CAAC,CACL,EAAEK,aAAa,CAAC;AACjB,SAASA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}